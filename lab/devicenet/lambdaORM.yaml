model:
  enums:
    - name: DeviceType
      values:
        - name: phone
          value: phone
        - name: computer
          value: computer
        - name: robot
          value: robot
    - name: ComponentType
      values:
        - name: camera
          value: camera
        - name: microphone
          value: microphone
        - name: speaker
          value: speaker
        - name: gps
          value: gps
    - name: FileType
      values:
        - name: video
          value: video
        - name: audio
          value: audio
    - name: Role
      values:
        - name: owner
          value: owner
        - name: admin
          value: admin
        - name: guest
          value: guest
  entities:
    - name: Basics
      abstract: true
      properties:
        - name: created
          type: datetime
          default: now()
    - name: Positions
      abstract: true
      properties:
        - name: latitude
          type: decimal
        - name: longitude
          type: decimal
        - name: altitude
          type: decimal
    - name: Products
      extends: Basics
      abstract: true
      properties:
        - name: brand
          length: 32
        - name: model
          length: 32
        - name: serialNumber
          length: 32
    - name: Devices
      extends: Products
      primaryKey: ["id"]
      uniqueKey: ["name"]
      properties:
        # tipo + identificador (el identificador es de acuerdo al tipo , en un tel√©fono es el imei, en una pc la mac)
        - name: id
          length: 32
          required: true
        - name: type
          length: 16
          required: true
        - name: name
          length: 32
          required: true
        - name: groupId
          length: 32
        - name: password
          writeValue: encrypt(password,"$$DEVICES_SECRET_KEY")
          readValue: decrypt(password,"$$DEVICES_SECRET_KEY")
        - name: so
          length: 32
        - name: imei
          length: 16
        - name: imei2
          length: 16
        - name: mac
          length: 24
        - name: macBluetooth
          length: 24
        - name: ip
          length: 24
      relations:
        - name: group
          from: groupId
          entity: Groups
          to: id
        - name: components
          type: manyToOne
          from: id
          entity: Components
          to: deviceId
          composite: true
        - name: journeys
          type: manyToOne
          from: id
          entity: Journeys
          to: deviceId
        - name: files
          type: manyToOne
          from: id
          entity: Files
          to: deviceId
    - name: Components
      extends: Products
      primaryKey: ["id"]
      uniqueKey: ["deviceId", "name"]
      properties:
        # el ID del componente debe ser establecido por el  dispositivo, ejemplo  deviceID + name , ejemplo 233943849384483-cam01
        - name: id
          length: 50
          required: true
          default: concat(deviceId,"-",lower(substring(replace(name," ","-"),0,16)))
        - name: deviceId
          length: 32
          required: true
        - name: name
          length: 16
          required: true
        - name: type
          length: 16
          required: true
      relations:
        - name: device
          from: deviceId
          entity: Devices
          to: id
        - name: files
          type: manyToOne
          from: id
          entity: Files
          to: componentId
    - name: DeviceStatuses
      extends: Positions
      primaryKey: ["id"]
      indexes:
        - name: time
          fields: ["time"]
      properties:
        - name: id
          type: integer
          required: true
          autoIncrement: true
        - name: deviceId
          length: 32
          required: true
        - name: journeyId
          type: integer
        - name: cpu
          type: decimal
        - name: cpuTemperature
          type: decimal
        - name: battery
          type: decimal
        - name: wifiSignal
          type: decimal
        - name: time
          type: datetime
          required: true
        - name: registered
          type: datetime
          default: now()
      relations:
        - name: device
          from: deviceId
          entity: Devices
          to: id
        - name: journey
          from: journeyId
          entity: Journeys
          to: id
    # representa un trayecto, ejemplo de casa al colegio
    - name: Journeys
      extends: Basics
      primaryKey: ["id"]
      indexes:
        - name: deviceId
          fields: ["deviceId"]
      properties:
        - name: id
          type: integer
          required: true
          autoIncrement: true
        - name: deviceId
          length: 32
          required: true
        - name: startId
          type: integer
        - name: endId
          type: integer
      relations:
        - name: device
          from: deviceId
          entity: Devices
          to: id
        - name: start
          from: startId
          entity: DeviceStatuses
          to: id
        - name: end
          from: endId
          entity: DeviceStatuses
          to: id
        - name: statuses
          type: manyToOne
          composite: true
          from: id
          entity: DeviceStatuses
          to: journeyId
    - name: Files
      #  use MinIO for save files, field file is path
      extends: Basics
      primaryKey: ["id"]
      properties:
        #  el id es el fullPath del file, ejemplo: /deviceId/componentId/202202100922.mp3
        - name: id
          length: 255
          required: true
        # el tipo de file, ejemplo: audio|video
        - name: type
          length: 16
          required: true
        - name: deviceId
          length: 32
          required: true
        - name: componentId
          length: 50
        - name: startDate
          type: datetime
          required: true
        - name: endDate
          type: datetime
          required: true
      relations:
        - name: device
          from: deviceId
          entity: Devices
          to: id
        - name: component
          from: componentId
          entity: Components
          to: id
      constraints:
        - message: start cannot be less than end
          condition: start<=end
    - name: Users
      extends: Basics
      primaryKey: ["username"]
      uniqueKey: ["email"]
      properties:
        - name: username
          length: 32
          required: true
        - name: firstname
          required: true
        - name: lastname
          required: true
        - name: email
          required: true
          length: 512
          writeValue: encrypt(lower(email),"$$USERS_SECRET_KEY")
          readValue: decrypt(email,"$$USERS_SECRET_KEY")
      relations:
        - name: members
          type: manyToOne
          from: username
          entity: GroupUsers
          to: username
      constraints:
        - message: invalid email
          condition: test(email,"^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$")
    - name: Groups
      extends: Basics
      primaryKey: ["id"]
      uniqueKey: ["name"]
      properties:
        - name: id
          length: 32
          default: lower(substring(replace(name," ","-"),0,32))
          required: true
        - name: name
          length: 32
          required: true
      relations:
        - name: members
          type: manyToOne
          from: id
          entity: GroupUsers
          to: groupId
          composite: true
        - name: devices
          type: manyToOne
          from: id
          entity: Devices
          to: groupId
          composite: true
    - name: GroupUsers
      primaryKey: ["id"]
      uniqueKey: ["groupId", "username"]
      properties:
        - name: id
          type: integer
          required: true
          autoIncrement: true
        - name: username
          length: 32
          required: true
        - name: groupId
          length: 32
          required: true
        - name: rol
          length: 32
          required: true
      relations:
        - name: group
          from: groupId
          entity: Groups
          to: id
        - name: user
          from: username
          entity: Users
          to: username
data:
  mappings:
    - name: default
  sources:
    - name: main
      mapping: default
      dialect: PostgreSQL
      connection: ${CNN_POSTGRES}
stages:
  - name: default
    sources:
      - name: main
